Archive member included because of file (symbol)

../../lib/libATMega16.a(ajusterPWM.o)
                              main.o (_Z10ajusterPWMhh)
../../lib/libATMega16.a(del.o)
                              main.o (_ZN3del7allumerEh)
../../lib/libATMega16.a(detecteurligne.o)
                              main.o (_ZN14DetecteurLigne16getStatutCourantEv)
/usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm16.o (exit)
/usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_fixunssfsi.o)
                              ../../lib/libATMega16.a(ajusterPWM.o) (__fixunssfsi)
/usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_addsub_sf.o)
                              /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_fixunssfsi.o) (__subsf3)
/usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_mul_sf.o)
                              ../../lib/libATMega16.a(ajusterPWM.o) (__mulsf3)
/usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_ge_sf.o)
                              /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_fixunssfsi.o) (__gesf2)
/usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_si_to_sf.o)
                              ../../lib/libATMega16.a(ajusterPWM.o) (__floatsisf)
/usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_sf_to_si.o)
                              /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_fixunssfsi.o) (__fixsfsi)
/usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_thenan_sf.o)
                              /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_addsub_sf.o) (__thenan_sf)
/usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_prologue.o)
                              /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_addsub_sf.o) (__prologue_saves__)
/usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_epilogue.o)
                              /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_addsub_sf.o) (__epilogue_restores__)
/usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clzsi2.o)
                              /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_si_to_sf.o) (__clzsi2)
/usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_pack_sf.o)
                              /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_addsub_sf.o) (__pack_f)
/usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_unpack_sf.o)
                              /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_addsub_sf.o) (__unpack_f)
/usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_fpcmp_parts_sf.o)
                              /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_ge_sf.o) (__fpcmp_parts_f)
/usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clz.o)
                              /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clzsi2.o) (__clz_tab)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm16.o
LOAD main.o
LOAD /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/libm.a
LOAD ../../lib/libATMega16.a
LOAD /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x10bc
 *(.vectors)
 .vectors       0x00000000       0x54 /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm16.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm16.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm16.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm16.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm16.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092       0x8c main.o
                0x00000092                _Z6setBitPVhh
                0x000000aa                _Z8unsetBitPVhh
                0x000000d8                _Z11initialiserv
                0x000000f6                __vector_19
                0x0000010a                __vector_6
 .text          0x0000011e       0x2a ../../lib/libATMega16.a(ajusterPWM.o)
                0x0000011e                _Z10ajusterPWMhh
 .text          0x00000148      0x108 ../../lib/libATMega16.a(del.o)
                0x00000148                _Z10allumerDelhi
                0x0000018a                _ZN3del7allumerEh
                0x000001d4                _ZN3del8eteindreEv
                0x000001dc                _Z6delaisj
                0x000001f8                _ZN3del9clignoterEhh
 .text          0x00000250      0x16c ../../lib/libATMega16.a(detecteurligne.o)
                0x00000250                _Z6getBithh
                0x00000286                _ZN14DetecteurLigne15initialiserPortEv
                0x000002a0                _ZN14DetecteurLigneC2EPVhS1_hhh
                0x000002a0                _ZN14DetecteurLigneC1EPVhS1_hhh
                0x00000322                _ZN14DetecteurLigne15getStatutAncienEv
                0x00000328                _ZN14DetecteurLigne10getPortValEv
                0x000003a0                _ZN14DetecteurLigne16getStatutCourantEv
 .text          0x000003bc        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
 .text          0x000003bc        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
 .text          0x000003bc        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clear_bss.o)
 .text          0x000003bc       0x60 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_fixunssfsi.o)
                0x000003bc                __fixunssfsi
 .text          0x0000041c      0x382 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_addsub_sf.o)
                0x000006c6                __addsf3
                0x0000072e                __subsf3
 .text          0x0000079e      0x206 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_mul_sf.o)
                0x0000079e                __mulsf3
 .text          0x000009a4       0x62 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_ge_sf.o)
                0x000009a4                __gesf2
 .text          0x00000a06       0xf2 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_si_to_sf.o)
                0x00000a06                __floatsisf
 .text          0x00000af8       0xa4 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_sf_to_si.o)
                0x00000af8                __fixsfsi
 .text          0x00000b9c        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_thenan_sf.o)
 .text          0x00000b9c        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_prologue.o)
 .text          0x00000b9c        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_epilogue.o)
 .text          0x00000b9c       0xa8 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clzsi2.o)
                0x00000b9c                __clzsi2
 .text          0x00000c44      0x1b4 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_pack_sf.o)
                0x00000c44                __pack_f
 .text          0x00000df8       0xd2 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_unpack_sf.o)
                0x00000df8                __unpack_f
 .text          0x00000eca       0xba /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_fpcmp_parts_sf.o)
                0x00000eca                __fpcmp_parts_f
 .text          0x00000f84        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clz.o)
                0x00000f84                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000f84       0xc6 main.o
                0x00000f84                main
 .text.libgcc   0x0000104a        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000104a        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000104a        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000104a       0x38 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_prologue.o)
                0x0000104a                __prologue_saves__
 .text.libgcc   0x00001082       0x36 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_epilogue.o)
                0x00001082                __epilogue_restores__
                0x000010b8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000010b8        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
                0x000010b8                exit
                0x000010b8                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000010b8        0x4 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x000010bc                _etext = .

.data           0x00800060      0x108 load address 0x000010bc
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm16.o
 .data          0x00800060        0x0 main.o
 .data          0x00800060        0x0 ../../lib/libATMega16.a(ajusterPWM.o)
 .data          0x00800060        0x0 ../../lib/libATMega16.a(del.o)
 .data          0x00800060        0x0 ../../lib/libATMega16.a(detecteurligne.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clear_bss.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_fixunssfsi.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_addsub_sf.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_mul_sf.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_ge_sf.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_si_to_sf.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_sf_to_si.o)
 .data          0x00800060        0x8 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_thenan_sf.o)
                0x00800060                __thenan_sf
 .data          0x00800068        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_prologue.o)
 .data          0x00800068        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_epilogue.o)
 .data          0x00800068        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clzsi2.o)
 .data          0x00800068        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_pack_sf.o)
 .data          0x00800068        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_unpack_sf.o)
 .data          0x00800068        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_fpcmp_parts_sf.o)
 .data          0x00800068      0x100 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clz.o)
                0x00800068                __clz_tab
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800168                . = ALIGN (0x2)
                0x00800168                _edata = .
                0x00800168                PROVIDE (__data_end, .)

.bss            0x00800168        0x3
                0x00800168                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800168        0x0 /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm16.o
 .bss           0x00800168        0x1 main.o
                0x00800168                maligne
 .bss           0x00800169        0x0 ../../lib/libATMega16.a(ajusterPWM.o)
 .bss           0x00800169        0x0 ../../lib/libATMega16.a(del.o)
 .bss           0x00800169        0x2 ../../lib/libATMega16.a(detecteurligne.o)
                0x00800169                statutDetecteurLigne
 .bss           0x0080016b        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
 .bss           0x0080016b        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
 .bss           0x0080016b        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0080016b        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_fixunssfsi.o)
 .bss           0x0080016b        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_addsub_sf.o)
 .bss           0x0080016b        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_mul_sf.o)
 .bss           0x0080016b        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_ge_sf.o)
 .bss           0x0080016b        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_si_to_sf.o)
 .bss           0x0080016b        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_sf_to_si.o)
 .bss           0x0080016b        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_thenan_sf.o)
 .bss           0x0080016b        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_prologue.o)
 .bss           0x0080016b        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_epilogue.o)
 .bss           0x0080016b        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clzsi2.o)
 .bss           0x0080016b        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_pack_sf.o)
 .bss           0x0080016b        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_unpack_sf.o)
 .bss           0x0080016b        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_fpcmp_parts_sf.o)
 .bss           0x0080016b        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clz.o)
 *(.bss*)
 *(COMMON)
                0x0080016b                PROVIDE (__bss_end, .)
                0x000010bc                __data_load_start = LOADADDR (.data)
                0x000011c4                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080016b        0x0
                0x0080016b                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080016b                PROVIDE (__noinit_end, .)
                0x0080016b                _end = .
                0x0080016b                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.stab           0x00000000     0x369c
 *(.stab)
 .stab          0x00000000      0x6cc /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm16.o
 .stab          0x000006cc      0x708 main.o
                                0x714 (size before relaxing)
 .stab          0x00000dd4       0x54 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
                                 0x60 (size before relaxing)
 .stab          0x00000e28       0x9c /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
                                 0xa8 (size before relaxing)
 .stab          0x00000ec4       0x78 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clear_bss.o)
                                 0x84 (size before relaxing)
 .stab          0x00000f3c      0x3cc /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_fixunssfsi.o)
                                0x3d8 (size before relaxing)
 .stab          0x00001308      0x720 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_addsub_sf.o)
                                0x858 (size before relaxing)
 .stab          0x00001a28      0x4b0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_mul_sf.o)
                                0x6b4 (size before relaxing)
 .stab          0x00001ed8      0x234 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_ge_sf.o)
                                0x438 (size before relaxing)
 .stab          0x0000210c      0x2c4 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_si_to_sf.o)
                                0x4c8 (size before relaxing)
 .stab          0x000023d0      0x258 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_sf_to_si.o)
                                0x45c (size before relaxing)
 .stab          0x00002628      0x138 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_thenan_sf.o)
                                0x33c (size before relaxing)
 .stab          0x00002760      0x18c /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_prologue.o)
                                0x198 (size before relaxing)
 .stab          0x000028ec      0x18c /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_epilogue.o)
                                0x198 (size before relaxing)
 .stab          0x00002a78      0x1f8 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clzsi2.o)
                                0x420 (size before relaxing)
 .stab          0x00002c70      0x390 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_pack_sf.o)
                                0x594 (size before relaxing)
 .stab          0x00003000      0x2b8 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_unpack_sf.o)
                                0x4bc (size before relaxing)
 .stab          0x000032b8      0x2a0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_fpcmp_parts_sf.o)
                                0x4a4 (size before relaxing)
 .stab          0x00003558      0x144 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clz.o)
                                0x36c (size before relaxing)

.stabstr        0x00000000     0x66fd
 *(.stabstr)
 .stabstr       0x00000000     0x66fd /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm16.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(main.out elf32-avr)
LOAD linker stubs
